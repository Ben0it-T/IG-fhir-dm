/*
map "https://aphp.fr/ig/fhir/dm/StructureMap/CorePhysical2Business" = "CorePhysical2Business"

/// name = 'CorePhysical2Business'
/// title = 'Alignement de l\'usage Core du modèle physique du DPI vers le modèle métier de l\'usage'


// Alignement entre le modèle physique du DPI le modèle métier de l'usage Core

/*
uses "https://aphp.fr/ig/fhir/eds/StructureDefinition/OsMupMessungen" alias MessungenTable as source
uses "https://aphp.fr/ig/fhir/eds/StructureDefinition/OsKernNatperson" alias NatpersonTable as source
uses "https://aphp.fr/ig/fhir/eds/StructureDefinition/OsKernPatient" alias PatientTable as source
uses "https://aphp.fr/ig/fhir/eds/StructureDefinition/OsSysCatalogdef" alias CatalogdefTable as source
uses "https://aphp.fr/ig/fhir/eds/StructureDefinition/OsSysCatalogtext" alias CatalogtextTable as source
uses "https://aphp.fr/ig/fhir/eds/StructureDefinition/OsKernFall" alias FallTable as source
uses "https://aphp.fr/ig/fhir/eds/StructureDefinition/OsMedBefundart" alias BefundartTable as source
uses "https://aphp.fr/ig/fhir/eds/StructureDefinition/OsMedBefundarttext" alias BefundarttextTable as source
uses "https://aphp.fr/ig/fhir/eds/StructureDefinition/OsCwCwPrimitivum" alias PrimitivumTable as source
uses "https://aphp.fr/ig/fhir/eds/StructureDefinition/OsKernOrgaebene" alias OrgaebeneTable as source
uses "https://aphp.fr/ig/fhir/eds/StructureDefinition/OsKernFallFachrichtung" alias FallFachrichtungTable as source

uses "https://aphp.fr/ig/fhir/eds/StructureDefinition/CroisPediaPatient" alias LogicPatient as target
uses "https://aphp.fr/ig/fhir/eds/StructureDefinition/CroisPediaContactSystemeSante" alias LogicEncounter as target
uses "https://aphp.fr/ig/fhir/eds/StructureDefinition/CroisPediaHopital" alias LogicHospital as target
uses "https://aphp.fr/ig/fhir/eds/StructureDefinition/CroisPediaQuestionnaire" alias LogicQ as target
uses "https://aphp.fr/ig/fhir/eds/StructureDefinition/aphp-eds-questionnaire-response" alias LogicQR as target

group tableMessungen2LogicQR(source srcMeasure : MessungenTable, source srcUnit : CatalogtextTable, target tgtQR : LogicQR) {
  srcMeasure -> tgtQR.questionnaire = 'https://aphp.fr/ig/fhir/eds/Questionnaire/UsageCroissancePediatrique' "questionnaireRef"; // copie de la référence du questionnaire
  srcMeasure -> tgtQR.item as tgtQRItemGroupAnthropometric, tgtQRItemGroupAnthropometric.linkId = '4272730093623', tgtQRItemGroupAnthropometric.text = 'Données anthropométriques' then {
    srcMeasure where befundartid = 22 -> tgtQRItemGroupAnthropometric.item as tgtItemGroup, tgtItemGroup.linkId = '8093603385856', tgtItemGroup.text = 'Poids' then {
      srcMeasure.zeitpunkt as srcDate -> tgtItemGroup.item as tgtItemDate, tgtItemDate.linkId = '462464903374', tgtItemDate.text = 'Date de mesure',  tgtItemDate.answer as tgtItemDateAnswer, tgtItemDateAnswer.value = srcDate "transformDate"; // Date de la mesure du poids saisie par utilisateur
      srcMeasure.wert as srcValue, srcMeasure.unit as srcCode, srcUnit.shorttext as srcUnit where scrMeasure.unit = srcUnit.dbuid ->  tgtItemGroup.item as tgtItemValue, tgtItemValue.linkId = '2511015835627', tgtItemValue.text = 'Valeur', tgtItemValue.answer as tgtItemValueAnswer, tgtItemValueAnswer.value = qty(srcValue, srcUnit, 'https://aphp.fr/ig/fhir/eds/CodeSystem/MessungenUnit', srcCode) "transformValue"; // Valeur de la mesure du poids (Quantité)
      srcMeasure.stornoDatum as srcCancelDate -> tgtItemGroup.item as tgtItemDate, tgtItemDate.linkId = '8258139600415', tgtItemDate.text = 'Date d\'annulation',  tgtItemDate.answer as tgtItemDateAnswer, tgtItemDateAnswer.value = srcCancelDate "cancelDate"; // champ technique (date d'annulation de la mesure)
    } "transformGroupWeight";
    srcMeasure where befundartid = 21 -> tgtQRItemGroupAnthropometric.item as tgtItemGroup, tgtItemGroup.linkId = '3087681516367', tgtItemGroup.text = 'Taille' then {
      srcMeasure.zeitpunkt as srcDate -> tgtItemGroup.item as tgtItemDate, tgtItemDate.linkId = '8709708157814', tgtItemDate.text = 'Date de mesure', tgtItemDate.answer as tgtItemDateAnswer, tgtItemDateAnswer.value = srcDate "transformDate"; // Date de la mesure de la taille saisie par utilisateur
      srcMeasure.wert as srcValue, srcMeasure.unit as srcCode, srcUnit.shorttext as srcUnit where scrMeasure.unit = srcUnit.dbuid -> tgtItemGroup.item as tgtItemValue, tgtItemValue.linkId = '3914344246507', tgtItemValue.text = 'Valeur', tgtItemValue.answer as tgtItemValueAnswer, tgtItemValueAnswer.value = qty(srcValue, srcUnit, 'https://aphp.fr/ig/fhir/eds/CodeSystem/MessungenUnit', srcCode) "transformValue"; // Valeur de la mesure de la taille (Quantité)
      srcMeasure.stornoDatum as srcCancelDate -> tgtItemGroup.item as tgtItemDate, tgtItemDate.linkId = '4066699723565', tgtItemDate.text = 'Date d\'annulation',  tgtItemDate.answer as tgtItemDateAnswer, tgtItemDateAnswer.value = srcCancelDate "cancelDate"; // champ technique (date d'annulation de la mesure)    
    } "transformGroupHeight";
    srcMeasure where befundartid = 23 -> tgtQRItemGroupAnthropometric.item as tgtItemGroup, tgtItemGroup.linkId = '2453501684219', tgtItemGroup.text = 'Périmètre crânien' then {
      srcMeasure.zeitpunkt as srcDate -> tgtItemGroup.item as tgtItemDate, tgtItemDate.linkId = '4753056500439', tgtItemDate.text = 'Date de mesure', tgtItemDate.answer as tgtItemDateAnswer, tgtItemDateAnswer.value = srcMeasureDate "transformDate"; // Date de la mesure de la taille saisie par utilisateur
      srcMeasure.wert as srcValue, srcMeasure.unit as srcCode, srcUnit.shorttext as srcUnit where scrMeasure.unit = srcUnit.dbuid -> tgtItemGroup.item as tgtItemValue, tgtItemValue.linkId = '4019792370936', tgtItemValue.text = 'Valeur', tgtItemValue.answer as tgtItemValueAnswer, tgtItemValueAnswer.value = qty(srcValue, srcUnit, 'https://aphp.fr/ig/fhir/eds/CodeSystem/MessungenUnit', srcCode) "transformValue"; // Valeur de la mesure du périmètre crânien (Quantité)
      srcMeasure.stornoDatum as srcCancelDate -> tgtItemGroup.item as tgtItemDate, tgtItemDate.linkId = '6726598795046', tgtItemDate.text = 'Date d\'annulation',  tgtItemDate.answer as tgtItemDateAnswer, tgtItemDateAnswer.value = srcCancelDate "cancelDate"; // champ technique (date d'annulation de la mesure)
    } "transformGroupHeadCircumference";
  } "setGroupAnthropometric"; // Création du groupe "Données anthropométriques"
  srcMeasure.wertid "identifier"; // champ technique (clé primaire)
  srcMeasure.befundartid "mesureTypeId"; // champ technique (type de mesure)
  srcMeasure.fallid "encounterId"; // champ technique (identifiant du NDA)
  srcMeasure.validDate "validDate"; // champ technique (date de validation de la mesure)
  srcMeasure.measurementstatusid "mesureStatusId"; // champ technique (statut de la mesure)
}

group tableNatperson2LogicPatient(source src : NatpersonTable, source srcGenderTable : CatalogtextTable, target tgtPatient : LogicPatient) {
  src.gebdat as srcBirthDate -> tgtPatient.birthDate = srcBirthDate "dateDeNaissance"; // Date de naissance du patient
  src.sex as srcGenderId, 
  srcGenderTable.shorttext as srcGenderCode,
  srcGenderTable.longtext as srcGenderDisplay where src.sex = srcGenderTable.dbuid -> tgtPatient.gender = cc('https://aphp.fr/ig/fhir/eds/CodeSystem/PersonSex', srcGenderCode, srcGenderDisplay) as gender "gender"; // Sexe du patient
  src.persnr "patientId"; // champ technique (clé primaire)
  src.pid as srcIdentifier -> tgtPatient.identifier = id('https://aphp.fr/meta/Patient/ipp', srcIdentifier) "ipp"; // champ fonctionnel - IPP du patient
  src.edate "creationDate"; // date de création du patient
  src.ldate "majDate"; // date de mise à jour du patient
  src where stornoDatum.empty() then {
    src.stornoDatum as srcCancelDate -> tgtPatient.active = true "setPatientActive"; // date de suppression logique du patient
  } "cancelDateEmpty";
  src where stornoDatum.empty().not() then {
    src.stornoDatum as srcCancelDate -> tgtPatient.active = false "setPatientNotActive"; // date de suppression logique du patient
  } "cancelDateNotEmpty";
}

group tableFall2LogicContactSystemSante(source src : FallTable, source srcMedicalCaseState : CatalogtextTable, source srcMedicalCaseType : CatalogtextTable, target tgtEncounter : LogicEncounter) {
  src.fallid "ndaId"; // Identifiant du dossier
  src.medicalcasestate as srcMedicalCaseStateId,
  srcMedicalCaseState.shorttext as srcMedicalCaseStateCode, 
  srcMedicalCaseState.longtext as srcMedicalCaseStateDisplay where srcMedicalCaseStateId = srcMedicalCaseState.dbuid -> tgtEncounter.contactType = cc('https://aphp.fr/ig/fhir/eds/CodeSystem/FallMedicalCaseState', srcMedicalCaseStateCode, srcMedicalCaseStateDisplay) "ndaType"; // Type de dossier
  src.persnr "patientId"; // Identifiant du patient (clé étrangère)
  src.fallnr as srcNda -> tgtEncounter.identifier = id('https://aphp.fr/meta/Encounter/nda', srcNda) "nda"; // NDA : numéro de dossier administratif
  src.edate "creationDate"; // date technique de création du dossier
  src.ldate "majDate"; // date technique de mise à jour du dossier
  src.stornoDatum "suppressionDate"; // date de suppression logique du patient
  src.relativefallnr "relativeFallNr"; // unique index (FALLID,RELATIVEFALLNR,STORNO_DATUM)
  src.mandantid "mandantId"; // unique index (FALLID,MANDANTID)
  src.medicalcasetype as srcMedicalCaseTypeId, // état du dossier : supprimé, planifié, courant, sortie/cloturé
  srcMedicalCaseType.shorttext as srcMedicalCaseTypeCode,
  srcMedicalCaseType.longtext as srcMedicalCaseTypeDisplay where srcMedicalCaseTypeId = srcMedicalCaseType.dbuid -> tgtEncounter.status = cc('https://aphp.fr/ig/fhir/eds/CodeSystem/FallMedicalCaseType', srcMedicalCaseTypeCode, srcMedicalCaseTypeDisplay) "medicalCaseType"; // état du dossier : supprimé, planifié, courant, sortie/cloturé
  src.aufndat as srcPeriodStartOfEpisode -> tgtEncounter.period as tgtEncounterPeriod,
                                            tgtEncounterPeriod.start = srcPeriodStartOfEpisode "admissionDate"; // date d'admission affichée dans orbis
  src.entldat as srcPeriodEndOfEpisode -> tgtEncounter.period as tgtEncounterPeriod, 
                                          tgtEncounterPeriod.end = srcPeriodEndOfEpisode "endDate"; // date de sortie affichée dans orbis
}

group tableOrgaebene2LogicPediaHospital(source src : OrgaebeneTable, target tgtHospital : LogicHospital) {
  src.oebeneid "structureId"; // identifiant technique de la srtucture
  src.oebenename as srcStruct -> tgtHospital.name = truncate(srcStruct, 3) "Structure"; // nom de la structure
  src.orgatype "structureType"; // type de structure
  src.edate "creationDate"; // date technique d'insertion
  src.ldate "majDate"; // date technique de mise à jour du dossier 
  src.bsPersnr "bsPersnr"; // lien vers institut ou médecin
  src.gueltigab "startDate"; //date de début de validité
  src.gueltigbis "enDate"; //date de fin de validité
}

group tableFallFachrichtung(source src : FallFachrichtungTable){
  src.fallFachrichtid; // identifiant technique du mouvement
  src.oebeneid "structId"; // identifiant technique de la srtucture
  src.fallid "ndaId"; // Identifiant technique du séjour (NDA)
  src.beginn "beginDate"; //date de début du mouvement
  src.ende "endDate"; //date de fin du mouvement
  src.edate "creationDate"; // date technique d'insertion
  src.ldate "majDate"; // date technique de mise à jour du dossier 
}

group tableCatalogText(source src : CatalogtextTable) {
  src.textid "textId"; // champ technique - clé primaire
  src.dbuid "refId"; // champ technique - référence clé étrangère
  src.language; // code de la langue du libellé
  src.shorttext "libelleCourt"; // Libellé court
  src.longtext "libelleLong"; // Libellé long
  src.edate "creationDate"; // date de création du dossier
  src.ldate "majDate"; // date de mise à jour du dossier
  src.catalogid "catalogId"; // Identifiant du catalogue
  src.parentid "parentId"; // Identifiant du parent
  src.addtext1 "addText1"; // text additionnel 1
  src.sortAddtext1; // text additionnel 1 sans majuscules, ni accents
  src.kfAddtext1; // champ technique pour la recherche, et constituant un index unique
  src.phonLongtext; // champ technique pour la recherche, et constituant un index unique
  src.kfLongtext; // champ technique pour la recherche, et constituant un index unique
  src.sortLongtext; // champ technique pour la recherche, et constituant un index unique
  src.phonShorttext; // champ technique pour la recherche, et constituant un index unique
  src.kfShorttext; // champ technique pour la recherche, et constituant un index unique
  src.sortShorttext; // champ technique pour la recherche, et constituant un index unique
}

group tableCatalogDef(source src : CatalogdefTable) {
  src.dbuid "catId"; // champ technique - clé primaire
  src.lid "lId"; // champ technique - identifiant unique
  src.validfrom "validFrom"; // date de début de validité de la valeur du catalogue
  src.validto "validTo"; // date de fin de validité de la valeur du catalogue
  src.edate "creationDate"; // date de création
  src.ldate "majDate"; // date de mise à jour
  src.alid; // alternative identifier unique in catalog, used to store old primary key values in migrated tables
  src.parentid; // id of parent entry
  src.catalogid; // id of catalog
  src.facilityid; // NULL --> valid in all facilities, NOT NULL --> valid only in given facility
  src.cc; // catalog is only valid for given country (not allowed catalog entries)
  src.sortSortorder; // date de mise à jour
}

group tableBefundart(source src : BefundartTable) {
  src.befundartid "befundartId"; // clé primaire
  src.fkIdentifier; // champ technique - unique index
  src.edate "creationDate"; // date de création
  src.ldate "majDate"; // date de mise à jour
}

group tableBefundarttext(source src : BefundarttextTable) {
  src.befundarttextid "befundarttextId"; // clé primaire
  src.befundartid "befundartId"; // clé étrangère vers befundart
  src.longtext "longText"; // libellé long
  src.shorttext "shortText"; // libellé court
  src.language; // code de la langue
}

group tablePatient(source src : PatientTable) {
  src.persnr "patientId"; // champ technique - clé primaire
  src.birthdateapproximated "birthdateApproximated"; // true if the birthdate is not well known by the patient or dependants
}

group tablePrimitivum(source src : PrimitivumTable) {
  src.klasse; // identifiant du formulaire
  src.primitivumnummer; // identifiant de l'instance de formulaire
  src.storniert; // indique si l'instance de formulaire est annulée (storniert=1)
  src.fall; // identifiant du dossier patient (IdNDA)
  src.vklasse "vKlasse"; // version du formulaire
  src.meddate; // dépend des formulaires, peut être la date de création, ou de modification du formulaire
  src.primitivumnummer; // dépend des formulaires, peut être l'heure de création, ou de modification du formulaire
}
*/