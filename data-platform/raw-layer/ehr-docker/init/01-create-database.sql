-- ========================================================================
-- Script d'initialisation PostgreSQL pour base de donn√©es EHR
-- Support complet UTF-8 pour donn√©es fran√ßaises
-- Version simplifi√©e sans variables complexes
-- ========================================================================

\echo 'üè• Initialisation de la base de donn√©es EHR avec support UTF-8...'

-- La base de donn√©es 'ehr' est cr√©√©e automatiquement par Docker
-- Connexion √† la base EHR pour configuration
\c ehr

-- Configuration des param√®tres de session pour UTF-8
SET client_encoding TO 'UTF8';
SET lc_messages TO 'C.UTF-8';
SET lc_monetary TO 'C.UTF-8';
SET lc_numeric TO 'C.UTF-8';
SET lc_time TO 'C.UTF-8';
SET default_text_search_config TO 'french';

\echo 'üîß Configuration UTF-8 et fran√ßaise appliqu√©e'

-- Cr√©ation des extensions n√©cessaires
CREATE EXTENSION IF NOT EXISTS "uuid-ossp" SCHEMA public;
CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" SCHEMA public;
CREATE EXTENSION IF NOT EXISTS "unaccent" SCHEMA public;

\echo 'üì¶ Extensions PostgreSQL install√©es'

-- Configuration des privil√®ges pour l'utilisateur EHR
GRANT ALL PRIVILEGES ON DATABASE ehr TO ehr_user;
GRANT ALL PRIVILEGES ON SCHEMA public TO ehr_user;
GRANT CREATE ON SCHEMA public TO ehr_user;
ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON TABLES TO ehr_user;
ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON SEQUENCES TO ehr_user;
ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON FUNCTIONS TO ehr_user;

\echo 'üë§ Privil√®ges utilisateur configur√©s'

-- Fonction utilitaire pour v√©rifier l'encodage
CREATE OR REPLACE FUNCTION check_encoding()
RETURNS TABLE(parameter text, value text, description text)
LANGUAGE plpgsql
AS $$
BEGIN
    RETURN QUERY
    SELECT 
        'encoding'::text as parameter,
        pg_encoding_to_char(encoding) as value,
        'Encodage de la base de donn√©es'::text as description
    FROM pg_database WHERE datname = current_database()
    
    UNION ALL
    
    SELECT 
        'lc_collate'::text,
        datcollate,
        'Ordre de tri (collation)'::text
    FROM pg_database WHERE datname = current_database()
    
    UNION ALL
    
    SELECT 
        'lc_ctype'::text,
        datctype,
        'Classification des caract√®res'::text
    FROM pg_database WHERE datname = current_database()
    
    UNION ALL
    
    SELECT 
        'default_text_search_config'::text,
        current_setting('default_text_search_config'),
        'Configuration recherche textuelle'::text;
END
$$;

-- Fonction de nettoyage pour les accents (utile pour recherches)
CREATE OR REPLACE FUNCTION clean_french_text(input_text TEXT)
RETURNS TEXT
LANGUAGE plpgsql
IMMUTABLE
AS $$
BEGIN
    RETURN unaccent(LOWER(TRIM(input_text)));
END
$$;

COMMENT ON FUNCTION clean_french_text(TEXT) IS 'Fonction utilitaire pour nettoyer le texte fran√ßais (suppression accents, minuscules, espaces)';

-- Test des caract√®res fran√ßais
DO $TEST$
BEGIN
    -- Test d'insertion et tri de caract√®res fran√ßais
    CREATE TEMP TABLE test_francais (
        id SERIAL,
        texte TEXT
    );
    
    INSERT INTO test_francais (texte) VALUES 
        ('Andr√©'), ('√âmile'), ('√âlise'), ('C√©cile'), 
        ('Fran√ßois'), ('Jos√©e'), ('No√´l'), ('Zo√©');
    
    -- Test du tri fran√ßais
    IF (SELECT COUNT(*) FROM test_francais) = 8 THEN
        RAISE NOTICE '‚úÖ Test des caract√®res fran√ßais r√©ussi';
    ELSE
        RAISE WARNING '‚ö†Ô∏è Probl√®me avec le tri des caract√®res fran√ßais';
    END IF;
    
    DROP TABLE test_francais;
END
$TEST$;

\echo '‚úÖ Initialisation de la base de donn√©es EHR termin√©e!'
\echo 'üá´üá∑ Support UTF-8 complet activ√© pour caract√®res fran√ßais'
\echo 'üìä Base de donn√©es pr√™te pour les donn√©es de sant√© FHIR'

-- Affichage des informations de configuration
\echo ''
\echo '=== INFORMATIONS DE CONFIGURATION ==='
SELECT 
    current_database() as "Base de donn√©es",
    current_user as "Utilisateur actuel",
    version() as "Version PostgreSQL";

SELECT * FROM check_encoding();