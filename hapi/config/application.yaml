# HAPI FHIR JPA Server Configuration
# Production-ready configuration for FHIR R4

spring:
  application:
    name: HAPI FHIR JPA Server
  
  # Main datasource configuration
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://postgres:5432/hapi}
    username: ${SPRING_DATASOURCE_USERNAME:hapi}
    password: ${SPRING_DATASOURCE_PASSWORD:hapi_password}
    driverClassName: org.postgresql.Driver
    
    # HikariCP Connection Pool Settings
    hikari:
      maximum-pool-size: ${HIKARI_MAXIMUM_POOL_SIZE:20}
      minimum-idle: ${HIKARI_MINIMUM_IDLE:10}
      connection-timeout: ${HIKARI_CONNECTION_TIMEOUT:30000}
      idle-timeout: ${HIKARI_IDLE_TIMEOUT:600000}
      max-lifetime: ${HIKARI_MAX_LIFETIME:1800000}
      auto-commit: false
      pool-name: HAPIFHIRPool
      leak-detection-threshold: ${HIKARI_LEAK_DETECTION_THRESHOLD:60000}
      connection-test-query: SELECT 1
      validation-timeout: ${HIKARI_VALIDATION_TIMEOUT:5000}
      register-mbeans: true
  
  # JPA/Hibernate Configuration
  jpa:
    show-sql: ${HIBERNATE_SHOW_SQL:false}
    generate-ddl: false
    hibernate:
      ddl-auto: ${HIBERNATE_HBM2DDL_AUTO:update}
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        dialect: ca.uhn.fhir.jpa.model.dialect.HapiFhirPostgres94Dialect
        format_sql: ${HIBERNATE_FORMAT_SQL:false}
        show_sql: ${HIBERNATE_SHOW_SQL:false}
        hbm2ddl.auto: ${HIBERNATE_HBM2DDL_AUTO:update}
        jdbc:
          batch_size: ${HIBERNATE_BATCH_SIZE:20}
          batch_versioned_data: true
          order_inserts: true
          order_updates: true
        cache:
          use_query_cache: ${HIBERNATE_USE_QUERY_CACHE:false}
          use_second_level_cache: ${HIBERNATE_USE_SECOND_LEVEL_CACHE:false}
          use_structured_entries: ${HIBERNATE_USE_STRUCTURED_ENTRIES:false}
          use_minimal_puts: ${HIBERNATE_USE_MINIMAL_PUTS:false}
        search:
          enabled: true
          backend:
            type: lucene
            directory.root: ${LUCENE_DIR:/data/lucenefiles}
            lucene_version: LUCENE_CURRENT
        generate_statistics: ${HIBERNATE_GENERATE_STATISTICS:false}
        session:
          events:
            log:
              LOG_QUERIES_SLOWER_THAN_MS: 1000
  
  # Batch job configuration
  batch:
    job:
      enabled: true
    jdbc:
      initialize-schema: always
  
  # Flyway for database migrations
  flyway:
    enabled: false  # HAPI manages its own schema
    baseline-on-migrate: false
    check-location: false

# HAPI FHIR Configuration
hapi:
  fhir:
    # Version Configuration
    fhir_version: ${HAPI_FHIR_VERSION:R4}
    supported_resource_types:
      - Account
      - ActivityDefinition
      - AllergyIntolerance
      - Appointment
      - AuditEvent
      - Bundle
      - CapabilityStatement
      - CarePlan
      - CareTeam
      - Claim
      - ClinicalImpression
      - CodeSystem
      - Communication
      - Composition
      - ConceptMap
      - Condition
      - Consent
      - Coverage
      - DetectedIssue
      - Device
      - DiagnosticReport
      - DocumentReference
      - Encounter
      - Endpoint
      - EpisodeOfCare
      - ExplanationOfBenefit
      - FamilyMemberHistory
      - Flag
      - Goal
      - Group
      - HealthcareService
      - ImagingStudy
      - Immunization
      - List
      - Location
      - Medication
      - MedicationAdministration
      - MedicationDispense
      - MedicationRequest
      - MedicationStatement
      - MessageHeader
      - NamingSystem
      - Observation
      - OperationDefinition
      - Organization
      - Patient
      - Practitioner
      - PractitionerRole
      - Procedure
      - Provenance
      - Questionnaire
      - QuestionnaireResponse
      - RelatedPerson
      - RequestGroup
      - ResearchStudy
      - ResearchSubject
      - RiskAssessment
      - Schedule
      - SearchParameter
      - ServiceRequest
      - Slot
      - Specimen
      - StructureDefinition
      - StructureMap
      - Subscription
      - Substance
      - Task
      - ValueSet
    
    # Server Configuration
    server_address: ${HAPI_SERVER_ADDRESS:http://localhost:8080/fhir}
    server_id: ${HAPI_SERVER_ID:hapi-fhir-server}
    server_name: ${HAPI_SERVER_NAME:HAPI FHIR Server}
    implementation_description: ${HAPI_IMPLEMENTATION_DESCRIPTION:HAPI FHIR JPA Server}
    
    # Resource Provider Options
    default_page_size: ${HAPI_DEFAULT_PAGE_SIZE:20}
    max_page_size: ${HAPI_MAX_PAGE_SIZE:200}
    default_pretty_print: ${HAPI_DEFAULT_PRETTY_PRINT:true}
    
    # Database Configuration
    allow_external_references: ${HAPI_ALLOW_EXTERNAL_REFERENCES:true}
    allow_multiple_delete: ${HAPI_ALLOW_MULTIPLE_DELETE:true}
    allow_override_default_search_params: ${HAPI_ALLOW_OVERRIDE_DEFAULT_SEARCH_PARAMS:true}
    allow_cascading_deletes: ${HAPI_ALLOW_CASCADING_DELETES:true}
    allow_contains_searches: ${HAPI_ALLOW_CONTAINS_SEARCHES:true}
    allow_inline_match_url_references: ${HAPI_ALLOW_INLINE_MATCH_URL_REFERENCES:true}
    allow_placeholder_references: ${HAPI_ALLOW_PLACEHOLDER_REFERENCES:true}
    auto_create_placeholder_reference_targets: ${HAPI_AUTO_CREATE_PLACEHOLDER_REFERENCES:false}
    
    # Referential Integrity
    enforce_referential_integrity_on_delete: ${HAPI_ENFORCE_REFERENTIAL_INTEGRITY:false}
    enforce_referential_integrity_on_write: ${HAPI_ENFORCE_REFERENTIAL_INTEGRITY:false}
    
    # Search Configuration
    enable_index_missing_fields: ${HAPI_ENABLE_INDEX_MISSING_FIELDS:false}
    enable_index_contained_resource: ${HAPI_ENABLE_INDEX_CONTAINED_RESOURCE:false}
    advanced_lucene_indexing: ${HAPI_ADVANCED_LUCENE_INDEXING:false}
    filter_search_enabled: ${HAPI_FILTER_SEARCH_ENABLED:true}
    graphql_enabled: ${HAPI_GRAPHQL_ENABLED:true}
    
    # Validation Configuration
    validation:
      enabled: ${HAPI_VALIDATION_ENABLED:true}
      requests_enabled: ${HAPI_VALIDATION_REQUESTS_ENABLED:true}
      responses_enabled: ${HAPI_VALIDATION_RESPONSES_ENABLED:false}
      
    # Subscription Configuration
    subscription:
      resthook:
        enabled: ${HAPI_SUBSCRIPTION_RESTHOOK_ENABLED:false}
      email:
        enabled: ${HAPI_SUBSCRIPTION_EMAIL_ENABLED:false}
        from: ${HAPI_SUBSCRIPTION_EMAIL_FROM:noreply@example.com}
        host: ${HAPI_SUBSCRIPTION_EMAIL_HOST:localhost}
        port: ${HAPI_SUBSCRIPTION_EMAIL_PORT:25}
      websocket:
        enabled: ${HAPI_SUBSCRIPTION_WEBSOCKET_ENABLED:true}
    
    # Bulk Export Configuration
    bulk_export:
      enabled: ${HAPI_BULK_EXPORT_ENABLED:true}
      storage_path: ${HAPI_BULK_EXPORT_PATH:/data/bulk_export}
    
    # CORS Configuration
    cors:
      enabled: ${HAPI_CORS_ENABLED:true}
      allowed_origin:
        - ${HAPI_CORS_ALLOWED_ORIGIN:*}
      allow_credentials: ${HAPI_CORS_ALLOW_CREDENTIALS:false}
      allowed_methods:
        - GET
        - POST
        - PUT
        - DELETE
        - OPTIONS
        - PATCH
      allowed_headers:
        - Authorization
        - Cache-Control
        - Content-Type
        - Accept
        - Origin
        - User-Agent
        - DNT
        - X-Requested-With
        - If-Modified-Since
        - Keep-Alive
        - X-Forwarded-For
        - X-Forwarded-Proto
        - X-Real-IP
      exposed_headers:
        - Location
        - Content-Location
      max_age: 3600
    
    # Tester Configuration
    tester:
      enabled: ${HAPI_TESTER_ENABLED:true}
      home:
        name: ${HAPI_TESTER_NAME:Local Tester}
        server_address: ${HAPI_TESTER_SERVER_ADDRESS:http://localhost:8080/fhir}
        refuse_to_fetch_third_party_urls: false
        fhir_version: ${HAPI_FHIR_VERSION:R4}
    
    # Narrative Generator
    narrative:
      enabled: true
    
    # Binary Storage
    binary_storage:
      enabled: ${HAPI_BINARY_STORAGE_ENABLED:true}
      storage_path: ${HAPI_BINARY_STORAGE_PATH:/data/binary}
    
    # Client Configuration  
    client_id_strategy: ALPHANUMERIC
    reuse_cached_search_results_millis: ${HAPI_REUSE_CACHED_SEARCH_RESULTS:60000}
    retain_cached_searches_mins: ${HAPI_RETAIN_CACHED_SEARCHES:60}
    
    # Terminology Service
    terminology:
      enabled: true
      deferred_loading: true
    
    # Partitioning
    partitioning:
      enabled: ${HAPI_PARTITIONING_ENABLED:false}
      allow_references_across_partitions: ${HAPI_PARTITIONING_ALLOW_CROSS_REFS:false}
      include_partition_in_search_hashes: ${HAPI_PARTITIONING_INCLUDE_IN_SEARCH:false}
    
    # MDM (Master Data Management)
    mdm:
      enabled: ${HAPI_MDM_ENABLED:false}
    
    # Security
    security:
      enabled: ${HAPI_SECURITY_ENABLED:false}
      oauth:
        enabled: ${HAPI_OAUTH_ENABLED:false}
      basic_auth:
        enabled: ${HAPI_BASIC_AUTH_ENABLED:false}

# Management Endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus,metrics
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true
    prometheus:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: ${spring.application.name}
      environment: ${ENVIRONMENT:production}
  health:
    db:
      enabled: true
    diskspace:
      enabled: true
      threshold: 1073741824  # 1GB

# Server Configuration
server:
  port: 8080
  servlet:
    context-path: /
    session:
      timeout: 30m
  compression:
    enabled: true
    mime-types:
      - application/json
      - application/fhir+json
      - application/fhir+xml
      - text/html
      - text/xml
      - text/plain
  error:
    include-message: always
    include-stacktrace: on_param
  tomcat:
    max-threads: ${TOMCAT_MAX_THREADS:200}
    min-spare-threads: ${TOMCAT_MIN_SPARE_THREADS:10}
    accept-count: ${TOMCAT_ACCEPT_COUNT:100}
    max-connections: ${TOMCAT_MAX_CONNECTIONS:10000}
    connection-timeout: ${TOMCAT_CONNECTION_TIMEOUT:60000}
    accesslog:
      enabled: true
      directory: /var/log/hapi
      pattern: '%h %l %u %t "%r" %s %b %D'
      prefix: access_log
      suffix: .log
      rotate: true
      max-days: 30

# Logging Configuration
logging:
  level:
    root: ${LOG_LEVEL_ROOT:INFO}
    ca.uhn.fhir: ${LOG_LEVEL_FHIR:INFO}
    org.hibernate: ${LOG_LEVEL_HIBERNATE:WARN}
    org.hibernate.SQL: ${LOG_LEVEL_SQL:WARN}
    org.hibernate.type.descriptor.sql.BasicBinder: ${LOG_LEVEL_SQL_BINDING:WARN}
    org.springframework: ${LOG_LEVEL_SPRING:INFO}
    org.springframework.web: ${LOG_LEVEL_WEB:INFO}
  pattern:
    console: '%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n'
    file: '%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n'
  file:
    name: /var/log/hapi/hapi-fhir.log
    max-size: 100MB
    max-history: 30
    total-size-cap: 1GB